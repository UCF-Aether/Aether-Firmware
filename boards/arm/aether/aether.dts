/*
 * Copyright (c) 2021 Thomas Stranger
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <seeed/lora-e5.dtsi>

/ {
	model = "Aether Air Quality Sensor Board";
	compatible = "ucf-aether,aether-v1";

	chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		status0: led_0 {
			gpios = <&gpiob 4 GPIO_ACTIVE_LOW>;
			label = "Status LED";
		};
	};

	aliases {
		lora0 = &lora;
    led0 = &status0;
	};

  gpio_keys {
    compatible = "gpio-keys";
    usb_wakeup: usb_wakeup {
      gpios = <&gpiob 3 GPIO_ACTIVE_HIGH>;
      label = "Wakeup from USB";
    };
	sps_power_pins: sps_power_pins {
		gpios = <&gpioc 1 GPIO_ACTIVE_HIGH>;
		label = "Turn on SPS";
	};
  };

  pwr_5v_domain: pwr_5v_domain {
    status = "okay";
    compatible = "power-domain-gpio";
    label = "pwr_5v_domain";
    enable-gpios = <&gpioc 1 GPIO_ACTIVE_HIGH>;
  };

	power-states {
		stop0: state0 {
			compatible = "zephyr,power-state";
			power-state-name = "suspend-to-idle";
			substate-id = <1>;
			min-residency-us = <100>;
		};
		/* stop1: state1 { */
		/* 	compatible = "zephyr,power-state"; */
		/* 	power-state-name = "suspend-to-idle"; */
		/* 	substate-id = <2>; */
		/* 	min-residency-us = <500>; */
		/* }; */
		/* stop2: state2 { */
		/* 	compatible = "zephyr,power-state"; */
		/* 	power-state-name = "suspend-to-idle"; */
		/* 	substate-id = <3>; */
		/* 	min-residency-us = <900>; */
		/* }; */
	};
};

sensors: &i2c2 {
  bme680: bme680@76 {
    compatible = "bosch,bme680";
    reg = <0x76>;
    label = "BME680";
    status="okay";
  };
  zmod4510: zmod4510@33 {
    compatible = "renesas,zmod4510";
    reg = <0x33>;
    label = "ZMOD4510";
    status="okay";
  };
  sps30: sps30@69 {
    compatible = "sensirion,sps30";
    reg = <0x69>;
    label = "SPS30";
    status="okay";
    power-domain = <&pwr_5v_domain>;
  };
};

&gpiob {
  wakeup-source;
};

&cpu0 {
	/* cpu-power-states = <&stop0 &stop1 &stop2>; */
	cpu-power-states = <&stop0>;
};

&lptim1 {
	status = "okay";
};

&clk_msi {
	status = "okay";
	msi-range = <11>;
};

&pll {
	clocks = <&clk_msi>;
	div-m = <3>;
	mul-n = <6>;
	div-r = <2>;
	div-q = <2>;
	div-p = <2>;
	status = "okay";
};

&rcc {
	clocks = <&clk_msi>;
	clock-frequency = <DT_FREQ_M(48)>;
	cpu1-prescaler = <1>;
	ahb3-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pb6 &usart1_rx_pb7>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&i2c2 {
	pinctrl-0 = <&i2c2_scl_pb15 &i2c2_sda_pa15>;
	pinctrl-names = "default";
	status = "okay";
  /* sps30 has a max frequency of 100kHz */
	clock-frequency = <I2C_BITRATE_STANDARD>;
};

&rtc {
	status = "okay";
};

&iwdg {
	status = "okay";
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* 16KB (8x2kB pages) of storage at the end of the flash */
		storage_partition: partition@3c000 {
			label = "storage";
			reg = <0x0003c000 0x00004000>;
		};
	};
};

/*
 * Other Pins:
 * Not assigned:  None
 * Debug:         PA13(swdio), PA14(swclk)
 */
